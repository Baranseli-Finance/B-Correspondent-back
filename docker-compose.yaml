# version: '3.7'
services:

  db:
    image: postgres:15.3
    container_name: b-correspondent_db
    restart: 'always'
    ports:
      - 5432:5432
    environment:
      - DB_USER=${DBUSER}
      - DB_PASSWORD=${DBPASS}
      - DB_DATABASE=${DATABASE}
      - POSTGRES_PASSWORD=${DBPOSTGRESPASS}
      - POSTGRES_USER=postgres
    volumes:
      - ${PWD}/deploy/db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d/
      - pg_db:/var/lib/postgresql/data
    networks:
      b-correspondent:
         ipv4_address: 192.168.22.4

  back:
    image: europe-west3-docker.pkg.dev/b-correspondent/back/back:${BACK_TAG}
    container_name: b-correspondent_back
    profiles:
      - main
    links:
      - db
      - storage
    depends_on:
      - db
      - storage
      - migration
      - proxy-server
    ports:
      - 12000:12000
    volumes:
      - ${HOME}/env.yaml:/server/env.yaml
      - ${HOME}/bcorrespondent_env:/server/bcorrespondent_env
      - ${HOME}/config.yaml:/server/deploy/config.yaml
      - ${PWD}/deploy/init.sh:/server/deploy/init.sh
      - ${HOME}/jwk.txt:/server/deploy/jwk.txt
      - ${HOME}/twofish128.txt:/server/deploy/twofish128.txt
      - ${HOME}/front_env:/server/front_env
      - ${PWD}/country-code.csv:/server/country-code.csv
      - ${PWD}/template:/server/template
    networks:
      b-correspondent:
         ipv4_address: 192.168.22.6

  front:
    image: europe-west3-docker.pkg.dev/b-correspondent/front/front:${FRONT_TAG}
    container_name: b-correspondent_front
    profiles:
      - main
    restart: 'always'
    ports:
      - 3001:3000
    networks:
      b-correspondent:
        ipv4_address: 192.168.22.7

  storage:
    image: minio/minio
    container_name: b-correspondent-file-storage
    restart: 'always'
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
    command: server --address ":9000" --console-address ":9001" /data
    networks:
      b-correspondent:
         ipv4_address: 192.168.22.5

  migration:
    image: liquibase/liquibase
    container_name: b-correspondent_migration
    profiles:
      - setup
    depends_on:
      - db
    environment:
      - DB_USER=${DBUSER}
      - DB_PASSWORD=${DBPASS}
      - DB_DATABASE=${DATABASE}
    volumes:
      - ${PWD}/migration/:/liquibase/changelog
      - ${PWD}/migration/liquibase_policy_init.sh:/liquibase/liquibase_policy_init.sh
    command: ['./liquibase_policy_init.sh']
    networks:
      - b-correspondent

  proxy-server:
    image: nginx
    container_name: b-correspondent-proxy-server
    profiles:
      - main
    volumes:
      - ${PWD}/deploy/nginx/proxy.conf:/etc/nginx/nginx.conf
      - ${HOME}/.htpasswd:/etc/apache2/.htpasswd
      - ${PWD}/deploy/nginx/ssl/front/b-correspondent.crt:/etc/nginx/certs/front/b-correspondent.crt
      - ${PWD}/deploy/nginx/ssl/front/b-correspondent.key:/etc/nginx/certs/front/b-correspondent.key
      - ${PWD}/deploy/nginx/ssl/back/b-correspondent.crt:/etc/nginx/certs/back/b-correspondent.crt
      - ${PWD}/deploy/nginx/ssl/back/b-correspondent.key:/etc/nginx/certs/back/b-correspondent.key
      - ${PWD}/deploy/nginx/ssl/global.pass:/etc/keys/global.pass
    ports:
      - 443:443
      - 80:80
    networks:
      - b-correspondent

  pgadmin:
    image: dpage/pgadmin4
    container_name: b-correspondent_pgadmin4
    profiles:
      - database
    restart: always
    ports:
      - 8888:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMINEMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMINPASS}
      SCRIPT_NAME: /pgadmin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      b-correspondent:
         ipv4_address: 192.168.22.8

  # The 'setup' service runs a one-off script which initializes users inside
  # Elasticsearch — such as 'logstash_internal' and 'kibana_system' — with the
  # values of the passwords defined in the '.env' file. It also creates the
  # roles required by some of these users.
  #
  # This task only needs to be performed once, during the *initial* startup of
  # the stack. Any subsequent run will reset the passwords of existing users to
  # the values defined inside the '.env' file, and the built-in roles to their
  # default permissions.
  #
  # By default, it is excluded from the services started by 'docker compose up'
  # due to the non-default profile it belongs to. To run it, either provide the
  # '--profile=setup' CLI flag to Compose commands, or "up" the service by name
  # such as 'docker compose up setup'.
  setup:
    container_name: b-correspondent_log-setup
    profiles:
      - setup
    build:
      context: ${PWD}/deploy/elk/setup/
    init: true
    volumes:
      - ${PWD}/deploy/elk/setup/entrypoint.sh:/entrypoint.sh:ro,Z
      - ${PWD}/deploy/elk/setup/lib.sh:/lib.sh:ro,Z
    environment:
      ELASTIC_PASSWORD: ${ELASTICPASS}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    networks:
      b-correspondent:
        ipv4_address: 192.168.22.15
    depends_on:
      - elasticsearch

  kibana:
    image: kibana:8.10.4
    container_name: b-correspondent_log-kibana
    profiles:
      - log
    ports:
      - 5601:5601
    volumes:
      - ${PWD}/deploy/elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
    networks:
      b-correspondent:
         ipv4_address: 192.168.22.11
    depends_on:
      - elasticsearch

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: b-correspondent_log-elasticsearch
    volumes:
      - ${PWD}/deploy/elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ELASTIC_PASSWORD: ${ELASTICPASS}
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      b-correspondent:
        ipv4_address: 192.168.22.12
    restart: unless-stopped

  logstash:
    image: logstash:8.11.0
    container_name: b-correspondent_log-logstash
    profiles:
      - log
    volumes:
      - ${PWD}/deploy/elk/logstash/config.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ${PWD}/deploy/elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
    networks:
      b-correspondent:
        ipv4_address: 192.168.22.13
    depends_on:
      - elasticsearch
    restart: unless-stopped

  filebeat:
    image: elastic/filebeat:8.11.0
    container_name: b-correspondent_log-filebeat
    profiles:
      - log
    user: root
    volumes:
      # - ${PWD}/deploy/elk/filebeat.yml:/usr/share/filebeat/filebeat.yml
      # - ${PWD}/deploy/elk/logstash-beats.crt:/etc/pki/tls/certs/logstash-beats.crt
      - filebeat:/usr/share/filebeat/data
      - /var/lib/docker/containers/:/var/lib/docker/containers/:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/log/:/var/log/:ro
      # This is needed for filebeat to load logs for auditd module. you might have to install audit system
      # on ubuntu first (sudo apt-get install -y auditd audispd-plugins)
      - /var/log/audit/:/var/log/audit/:ro
      - ${PWD}/deploy/elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    environment:
      - ELASTIC_USER=elastic
      - ELASTIC_PASSWORD=${ELASTICPASS}
      - ELASTIC_HOSTS=http://elasticsearch:9200
      - KIBANA_HOSTS=http://kibana:5601
      - LOGSTASH_HOSTS=http://logstash:9600
    command: filebeat -e -strict.perms=false
    networks:
      b-correspondent:
        ipv4_address: 192.168.22.14
    restart: unless-stopped


volumes:
  pg_db: {}
  minio_data: {}
  pgadmin-data: {}
  elasticsearch: {}
  filebeat: {}

networks:
  b-correspondent:
    driver: bridge
    ipam:
     config:
       - subnet: 192.168.22.0/25
# vim: et:sw=2