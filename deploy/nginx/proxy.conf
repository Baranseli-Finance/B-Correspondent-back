worker_processes  1;

events {
    worker_connections  1024;
}

http {

    server_tokens off;
    more_set_headers $SERVER_HEADER;

    ssl_password_file /etc/keys/global.pass;

    # https://sites.psu.edu/jasonheffner/2015/06/19/nginx-use-different-backend-based-on-http-header
    upstream back {
        server 192.168.22.6:12000;
    }

    upstream front {
        server 192.168.22.7:3000;
    }

    upstream pgadmin {
        server 192.168.22.8;
    }

    upstream kibana {
        server 192.168.22.11:5601;
    }

    map $http_user_agent $pool {
        default "front";
    }

    server {
        listen 443 ssl;
        server_name b-correspondent.app;
        ssl_certificate  /etc/nginx/certs/front/b-correspondent.crt;
        ssl_certificate_key /etc/nginx/certs/front/b-correspondent.key;

        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_hide_header Cache-Control;
            add_header Cache-Control "public,max-age=31536000";

            #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            resolver 8.8.8.8 8.8.4.4;

            rewrite .* $uri break;
            proxy_pass http://$pool;
        }

        location /pgadmin {
            proxy_set_header X-Script-Name /pgadmin;
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_pass http://pgadmin;
        }

        location /kibana {
            proxy_set_header X-Script-Name /kibana;
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_pass http://kibana;
        }
    }

    server {
        listen 443 ssl;
        server_name api.b-correspondent.app;
        ssl_certificate  /etc/nginx/certs/back/b-correspondent.crt;
        ssl_certificate_key /etc/nginx/certs/back/b-correspondent.key;

        client_max_body_size 100M;

        location / {
           proxy_set_header Host $http_host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;
           proxy_pass http://back;
        }

        location /ws {
           proxy_set_header Host $http_host;
           proxy_set_header X-Real-IP $remote_addr;
           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
           proxy_set_header X-Forwarded-Proto $scheme;

           proxy_set_header Upgrade $http_upgrade;
           proxy_set_header Connection "upgrade";

           proxy_pass http://back;
        }


        location ~^/(swagger|swagger.json)$ {
            auth_basic "Only for authorised personnel";
            auth_basic_user_file /etc/apache2/.htpasswd; 
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://back/$1;
        }
    }
}